import streamlit as st
import cv2
import numpy as np
import torch
from PIL import Image
import pandas as pd

st.title("üåä Under the sea detection")

st.write("Upload your Image...")

model_path = "models/best.pt"  # ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏°‡πÄ‡∏î‡∏• best.pt
model = torch.hub.load('ultralytics/yolov5', 'custom', path=model_path)

@st.cache(allow_output_mutation=True)
def load_model():
    return model

def count_objects_left_side(image, model):
    # ‡πÅ‡∏ö‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á
    height, width = image.shape[:2]
    half_width = width // 2
    left_image = image[:, :half_width]

    # ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∏‡∏î‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ö‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢
    result = model(left_image, size=600)
    detect_class = result.pandas().xyxy[0]
    
    # ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    object_count = len(detect_class)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á DataFrame ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏
    objects_df = pd.DataFrame(detect_class, columns=["xmin", "ymin", "xmax", "ymax", "confidence", "class", "name"])
    objects_df = objects_df[["name", "xmin", "ymin", "xmax", "ymax"]]

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    st.write("Total Objects:", object_count)
    st.write("Objects on the Left Side:", object_count)
    st.dataframe(objects_df)

uploaded_file = st.file_uploader("Choose .jpg pic ...", type="jpg")
if uploaded_file is not None:
    file_bytes = np.asarray(bytearray(uploaded_file.read()))
    image = cv2.imdecode(file_bytes, 1)
    imgRGB = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

    st.image(imgRGB)

    st.write("")
    st.write("Detecting...")

    model = load_model()
    count_objects_left_side(imgRGB, model)
